// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: gc.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Steam.GC {

  /// <summary>Holder for reflection information generated from gc.proto</summary>
  public static partial class GcReflection {

    #region Descriptor
    /// <summary>File descriptor for gc.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GcReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CghnYy5wcm90byJPChtDTXNnR0NSb3V0aW5nUHJvdG9CdWZIZWFkZXISFgoO",
            "ZHN0X2djaWRfcXVldWUYASABKAQSGAoQZHN0X2djX2Rpcl9pbmRleBgCIAEo",
            "DSKTBwoSQ01zZ1Byb3RvQnVmSGVhZGVyEhcKD2NsaWVudF9zdGVhbV9pZBgB",
            "IAEoBhIZChFjbGllbnRfc2Vzc2lvbl9pZBgCIAEoBRIVCg1zb3VyY2VfYXBw",
            "X2lkGAMgASgNEisKDWpvYl9pZF9zb3VyY2UYCiABKAY6FDE4NDQ2NzQ0MDcz",
            "NzA5NTUxNjE1EisKDWpvYl9pZF90YXJnZXQYCyABKAY6FDE4NDQ2NzQ0MDcz",
            "NzA5NTUxNjE1EhcKD3RhcmdldF9qb2JfbmFtZRgMIAEoCRIPCgdzZXFfbnVt",
            "GBggASgFEhIKB2VyZXN1bHQYDSABKAU6ATISFQoNZXJyb3JfbWVzc2FnZRgO",
            "IAEoCRIaChJhdXRoX2FjY291bnRfZmxhZ3MYECABKA0SFAoMdG9rZW5fc291",
            "cmNlGBYgASgNEhsKE2FkbWluX3Nwb29maW5nX3VzZXIYFyABKAgSGgoPdHJh",
            "bnNwb3J0X2Vycm9yGBEgASgFOgExEicKCW1lc3NhZ2VpZBgSIAEoBDoUMTg0",
            "NDY3NDQwNzM3MDk1NTE2MTUSGgoScHVibGlzaGVyX2dyb3VwX2lkGBMgASgN",
            "Eg0KBXN5c2lkGBQgASgNEhEKCXRyYWNlX3RhZxgVIAEoBBIVCg13ZWJhcGlf",
            "a2V5X2lkGBkgASgNEh8KF2lzX2Zyb21fZXh0ZXJuYWxfc291cmNlGBogASgI",
            "EhgKEGZvcndhcmRfdG9fc3lzaWQYGyADKA0SEAoIY21fc3lzaWQYHCABKA0S",
            "GAoNbGF1bmNoZXJfdHlwZRgfIAEoDToBMBIQCgVyZWFsbRggIAEoDToBMBIW",
            "Cgp0aW1lb3V0X21zGCEgASgFOgItMRIUCgxkZWJ1Z19zb3VyY2UYIiABKAkS",
            "IQoZZGVidWdfc291cmNlX3N0cmluZ19pbmRleBgjIAEoDRIQCgh0b2tlbl9p",
            "ZBgkIAEoBBIwCgpyb3V0aW5nX2djGCUgASgLMhwuQ01zZ0dDUm91dGluZ1By",
            "b3RvQnVmSGVhZGVyEkQKCmdjX21zZ19zcmMYyAEgASgOMhEuR0NQcm90b0J1",
            "Zk1zZ1NyYzocR0NQcm90b0J1Zk1zZ1NyY19VbnNwZWNpZmllZBIcChNnY19k",
            "aXJfaW5kZXhfc291cmNlGMkBIAEoDRIMCgJpcBgPIAEoDUgAEg8KBWlwX3Y2",
            "GB0gASgMSABCCQoHaXBfYWRkcirbAQoQR0NQcm90b0J1Zk1zZ1NyYxIgChxH",
            "Q1Byb3RvQnVmTXNnU3JjX1Vuc3BlY2lmaWVkEAASHwobR0NQcm90b0J1Zk1z",
            "Z1NyY19Gcm9tU3lzdGVtEAESIAocR0NQcm90b0J1Zk1zZ1NyY19Gcm9tU3Rl",
            "YW1JRBACEhsKF0dDUHJvdG9CdWZNc2dTcmNfRnJvbUdDEAMSIAocR0NQcm90",
            "b0J1Zk1zZ1NyY19SZXBseVN5c3RlbRAEEiMKH0dDUHJvdG9CdWZNc2dTcmNf",
            "U3Bvb2ZlZFN0ZWFtSUQQBUILqgIIU3RlYW0uR0M="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Steam.GC.GCProtoBufMsgSrc), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.GC.CMsgGCRoutingProtoBufHeader), global::Steam.GC.CMsgGCRoutingProtoBufHeader.Parser, new[]{ "DstGcidQueue", "DstGcDirIndex" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.GC.CMsgProtoBufHeader), global::Steam.GC.CMsgProtoBufHeader.Parser, new[]{ "ClientSteamId", "ClientSessionId", "SourceAppId", "JobIdSource", "JobIdTarget", "TargetJobName", "SeqNum", "Eresult", "ErrorMessage", "AuthAccountFlags", "TokenSource", "AdminSpoofingUser", "TransportError", "Messageid", "PublisherGroupId", "Sysid", "TraceTag", "WebapiKeyId", "IsFromExternalSource", "ForwardToSysid", "CmSysid", "LauncherType", "Realm", "TimeoutMs", "DebugSource", "DebugSourceStringIndex", "TokenId", "RoutingGc", "GcMsgSrc", "GcDirIndexSource", "Ip", "IpV6" }, new[]{ "IpAddr" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum GCProtoBufMsgSrc {
    [pbr::OriginalName("GCProtoBufMsgSrc_Unspecified")] Unspecified = 0,
    [pbr::OriginalName("GCProtoBufMsgSrc_FromSystem")] FromSystem = 1,
    [pbr::OriginalName("GCProtoBufMsgSrc_FromSteamID")] FromSteamId = 2,
    [pbr::OriginalName("GCProtoBufMsgSrc_FromGC")] FromGc = 3,
    [pbr::OriginalName("GCProtoBufMsgSrc_ReplySystem")] ReplySystem = 4,
    [pbr::OriginalName("GCProtoBufMsgSrc_SpoofedSteamID")] SpoofedSteamId = 5,
  }

  #endregion

  #region Messages
  public sealed partial class CMsgGCRoutingProtoBufHeader : pb::IMessage<CMsgGCRoutingProtoBufHeader>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgGCRoutingProtoBufHeader> _parser = new pb::MessageParser<CMsgGCRoutingProtoBufHeader>(() => new CMsgGCRoutingProtoBufHeader());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgGCRoutingProtoBufHeader> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.GC.GcReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgGCRoutingProtoBufHeader() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgGCRoutingProtoBufHeader(CMsgGCRoutingProtoBufHeader other) : this() {
      _hasBits0 = other._hasBits0;
      dstGcidQueue_ = other.dstGcidQueue_;
      dstGcDirIndex_ = other.dstGcDirIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgGCRoutingProtoBufHeader Clone() {
      return new CMsgGCRoutingProtoBufHeader(this);
    }

    /// <summary>Field number for the "dst_gcid_queue" field.</summary>
    public const int DstGcidQueueFieldNumber = 1;
    private readonly static ulong DstGcidQueueDefaultValue = 0UL;

    private ulong dstGcidQueue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong DstGcidQueue {
      get { if ((_hasBits0 & 1) != 0) { return dstGcidQueue_; } else { return DstGcidQueueDefaultValue; } }
      set {
        _hasBits0 |= 1;
        dstGcidQueue_ = value;
      }
    }
    /// <summary>Gets whether the "dst_gcid_queue" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDstGcidQueue {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "dst_gcid_queue" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDstGcidQueue() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "dst_gc_dir_index" field.</summary>
    public const int DstGcDirIndexFieldNumber = 2;
    private readonly static uint DstGcDirIndexDefaultValue = 0;

    private uint dstGcDirIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DstGcDirIndex {
      get { if ((_hasBits0 & 2) != 0) { return dstGcDirIndex_; } else { return DstGcDirIndexDefaultValue; } }
      set {
        _hasBits0 |= 2;
        dstGcDirIndex_ = value;
      }
    }
    /// <summary>Gets whether the "dst_gc_dir_index" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDstGcDirIndex {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "dst_gc_dir_index" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDstGcDirIndex() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgGCRoutingProtoBufHeader);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgGCRoutingProtoBufHeader other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DstGcidQueue != other.DstGcidQueue) return false;
      if (DstGcDirIndex != other.DstGcDirIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasDstGcidQueue) hash ^= DstGcidQueue.GetHashCode();
      if (HasDstGcDirIndex) hash ^= DstGcDirIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasDstGcidQueue) {
        output.WriteRawTag(8);
        output.WriteUInt64(DstGcidQueue);
      }
      if (HasDstGcDirIndex) {
        output.WriteRawTag(16);
        output.WriteUInt32(DstGcDirIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasDstGcidQueue) {
        output.WriteRawTag(8);
        output.WriteUInt64(DstGcidQueue);
      }
      if (HasDstGcDirIndex) {
        output.WriteRawTag(16);
        output.WriteUInt32(DstGcDirIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasDstGcidQueue) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(DstGcidQueue);
      }
      if (HasDstGcDirIndex) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DstGcDirIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgGCRoutingProtoBufHeader other) {
      if (other == null) {
        return;
      }
      if (other.HasDstGcidQueue) {
        DstGcidQueue = other.DstGcidQueue;
      }
      if (other.HasDstGcDirIndex) {
        DstGcDirIndex = other.DstGcDirIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DstGcidQueue = input.ReadUInt64();
            break;
          }
          case 16: {
            DstGcDirIndex = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            DstGcidQueue = input.ReadUInt64();
            break;
          }
          case 16: {
            DstGcDirIndex = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgProtoBufHeader : pb::IMessage<CMsgProtoBufHeader>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgProtoBufHeader> _parser = new pb::MessageParser<CMsgProtoBufHeader>(() => new CMsgProtoBufHeader());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgProtoBufHeader> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.GC.GcReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgProtoBufHeader() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgProtoBufHeader(CMsgProtoBufHeader other) : this() {
      _hasBits0 = other._hasBits0;
      clientSteamId_ = other.clientSteamId_;
      clientSessionId_ = other.clientSessionId_;
      sourceAppId_ = other.sourceAppId_;
      jobIdSource_ = other.jobIdSource_;
      jobIdTarget_ = other.jobIdTarget_;
      targetJobName_ = other.targetJobName_;
      seqNum_ = other.seqNum_;
      eresult_ = other.eresult_;
      errorMessage_ = other.errorMessage_;
      authAccountFlags_ = other.authAccountFlags_;
      tokenSource_ = other.tokenSource_;
      adminSpoofingUser_ = other.adminSpoofingUser_;
      transportError_ = other.transportError_;
      messageid_ = other.messageid_;
      publisherGroupId_ = other.publisherGroupId_;
      sysid_ = other.sysid_;
      traceTag_ = other.traceTag_;
      webapiKeyId_ = other.webapiKeyId_;
      isFromExternalSource_ = other.isFromExternalSource_;
      forwardToSysid_ = other.forwardToSysid_.Clone();
      cmSysid_ = other.cmSysid_;
      launcherType_ = other.launcherType_;
      realm_ = other.realm_;
      timeoutMs_ = other.timeoutMs_;
      debugSource_ = other.debugSource_;
      debugSourceStringIndex_ = other.debugSourceStringIndex_;
      tokenId_ = other.tokenId_;
      routingGc_ = other.routingGc_ != null ? other.routingGc_.Clone() : null;
      gcMsgSrc_ = other.gcMsgSrc_;
      gcDirIndexSource_ = other.gcDirIndexSource_;
      switch (other.IpAddrCase) {
        case IpAddrOneofCase.Ip:
          Ip = other.Ip;
          break;
        case IpAddrOneofCase.IpV6:
          IpV6 = other.IpV6;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgProtoBufHeader Clone() {
      return new CMsgProtoBufHeader(this);
    }

    /// <summary>Field number for the "client_steam_id" field.</summary>
    public const int ClientSteamIdFieldNumber = 1;
    private readonly static ulong ClientSteamIdDefaultValue = 0UL;

    private ulong clientSteamId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong ClientSteamId {
      get { if ((_hasBits0 & 1) != 0) { return clientSteamId_; } else { return ClientSteamIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clientSteamId_ = value;
      }
    }
    /// <summary>Gets whether the "client_steam_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClientSteamId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "client_steam_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClientSteamId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "client_session_id" field.</summary>
    public const int ClientSessionIdFieldNumber = 2;
    private readonly static int ClientSessionIdDefaultValue = 0;

    private int clientSessionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ClientSessionId {
      get { if ((_hasBits0 & 2) != 0) { return clientSessionId_; } else { return ClientSessionIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        clientSessionId_ = value;
      }
    }
    /// <summary>Gets whether the "client_session_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClientSessionId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "client_session_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClientSessionId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "source_app_id" field.</summary>
    public const int SourceAppIdFieldNumber = 3;
    private readonly static uint SourceAppIdDefaultValue = 0;

    private uint sourceAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SourceAppId {
      get { if ((_hasBits0 & 4) != 0) { return sourceAppId_; } else { return SourceAppIdDefaultValue; } }
      set {
        _hasBits0 |= 4;
        sourceAppId_ = value;
      }
    }
    /// <summary>Gets whether the "source_app_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSourceAppId {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "source_app_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSourceAppId() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "job_id_source" field.</summary>
    public const int JobIdSourceFieldNumber = 10;
    private readonly static ulong JobIdSourceDefaultValue = 18446744073709551615UL;

    private ulong jobIdSource_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong JobIdSource {
      get { if ((_hasBits0 & 8) != 0) { return jobIdSource_; } else { return JobIdSourceDefaultValue; } }
      set {
        _hasBits0 |= 8;
        jobIdSource_ = value;
      }
    }
    /// <summary>Gets whether the "job_id_source" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasJobIdSource {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "job_id_source" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearJobIdSource() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "job_id_target" field.</summary>
    public const int JobIdTargetFieldNumber = 11;
    private readonly static ulong JobIdTargetDefaultValue = 18446744073709551615UL;

    private ulong jobIdTarget_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong JobIdTarget {
      get { if ((_hasBits0 & 16) != 0) { return jobIdTarget_; } else { return JobIdTargetDefaultValue; } }
      set {
        _hasBits0 |= 16;
        jobIdTarget_ = value;
      }
    }
    /// <summary>Gets whether the "job_id_target" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasJobIdTarget {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "job_id_target" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearJobIdTarget() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "target_job_name" field.</summary>
    public const int TargetJobNameFieldNumber = 12;
    private readonly static string TargetJobNameDefaultValue = "";

    private string targetJobName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TargetJobName {
      get { return targetJobName_ ?? TargetJobNameDefaultValue; }
      set {
        targetJobName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "target_job_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTargetJobName {
      get { return targetJobName_ != null; }
    }
    /// <summary>Clears the value of the "target_job_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTargetJobName() {
      targetJobName_ = null;
    }

    /// <summary>Field number for the "seq_num" field.</summary>
    public const int SeqNumFieldNumber = 24;
    private readonly static int SeqNumDefaultValue = 0;

    private int seqNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SeqNum {
      get { if ((_hasBits0 & 16384) != 0) { return seqNum_; } else { return SeqNumDefaultValue; } }
      set {
        _hasBits0 |= 16384;
        seqNum_ = value;
      }
    }
    /// <summary>Gets whether the "seq_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeqNum {
      get { return (_hasBits0 & 16384) != 0; }
    }
    /// <summary>Clears the value of the "seq_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeqNum() {
      _hasBits0 &= ~16384;
    }

    /// <summary>Field number for the "eresult" field.</summary>
    public const int EresultFieldNumber = 13;
    private readonly static int EresultDefaultValue = 2;

    private int eresult_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Eresult {
      get { if ((_hasBits0 & 32) != 0) { return eresult_; } else { return EresultDefaultValue; } }
      set {
        _hasBits0 |= 32;
        eresult_ = value;
      }
    }
    /// <summary>Gets whether the "eresult" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEresult {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "eresult" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEresult() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "error_message" field.</summary>
    public const int ErrorMessageFieldNumber = 14;
    private readonly static string ErrorMessageDefaultValue = "";

    private string errorMessage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ErrorMessage {
      get { return errorMessage_ ?? ErrorMessageDefaultValue; }
      set {
        errorMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "error_message" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasErrorMessage {
      get { return errorMessage_ != null; }
    }
    /// <summary>Clears the value of the "error_message" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearErrorMessage() {
      errorMessage_ = null;
    }

    /// <summary>Field number for the "auth_account_flags" field.</summary>
    public const int AuthAccountFlagsFieldNumber = 16;
    private readonly static uint AuthAccountFlagsDefaultValue = 0;

    private uint authAccountFlags_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AuthAccountFlags {
      get { if ((_hasBits0 & 64) != 0) { return authAccountFlags_; } else { return AuthAccountFlagsDefaultValue; } }
      set {
        _hasBits0 |= 64;
        authAccountFlags_ = value;
      }
    }
    /// <summary>Gets whether the "auth_account_flags" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAuthAccountFlags {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "auth_account_flags" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAuthAccountFlags() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "token_source" field.</summary>
    public const int TokenSourceFieldNumber = 22;
    private readonly static uint TokenSourceDefaultValue = 0;

    private uint tokenSource_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TokenSource {
      get { if ((_hasBits0 & 4096) != 0) { return tokenSource_; } else { return TokenSourceDefaultValue; } }
      set {
        _hasBits0 |= 4096;
        tokenSource_ = value;
      }
    }
    /// <summary>Gets whether the "token_source" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTokenSource {
      get { return (_hasBits0 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "token_source" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTokenSource() {
      _hasBits0 &= ~4096;
    }

    /// <summary>Field number for the "admin_spoofing_user" field.</summary>
    public const int AdminSpoofingUserFieldNumber = 23;
    private readonly static bool AdminSpoofingUserDefaultValue = false;

    private bool adminSpoofingUser_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool AdminSpoofingUser {
      get { if ((_hasBits0 & 8192) != 0) { return adminSpoofingUser_; } else { return AdminSpoofingUserDefaultValue; } }
      set {
        _hasBits0 |= 8192;
        adminSpoofingUser_ = value;
      }
    }
    /// <summary>Gets whether the "admin_spoofing_user" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAdminSpoofingUser {
      get { return (_hasBits0 & 8192) != 0; }
    }
    /// <summary>Clears the value of the "admin_spoofing_user" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAdminSpoofingUser() {
      _hasBits0 &= ~8192;
    }

    /// <summary>Field number for the "transport_error" field.</summary>
    public const int TransportErrorFieldNumber = 17;
    private readonly static int TransportErrorDefaultValue = 1;

    private int transportError_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TransportError {
      get { if ((_hasBits0 & 128) != 0) { return transportError_; } else { return TransportErrorDefaultValue; } }
      set {
        _hasBits0 |= 128;
        transportError_ = value;
      }
    }
    /// <summary>Gets whether the "transport_error" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTransportError {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "transport_error" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTransportError() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "messageid" field.</summary>
    public const int MessageidFieldNumber = 18;
    private readonly static ulong MessageidDefaultValue = 18446744073709551615UL;

    private ulong messageid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Messageid {
      get { if ((_hasBits0 & 256) != 0) { return messageid_; } else { return MessageidDefaultValue; } }
      set {
        _hasBits0 |= 256;
        messageid_ = value;
      }
    }
    /// <summary>Gets whether the "messageid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMessageid {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "messageid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMessageid() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "publisher_group_id" field.</summary>
    public const int PublisherGroupIdFieldNumber = 19;
    private readonly static uint PublisherGroupIdDefaultValue = 0;

    private uint publisherGroupId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PublisherGroupId {
      get { if ((_hasBits0 & 512) != 0) { return publisherGroupId_; } else { return PublisherGroupIdDefaultValue; } }
      set {
        _hasBits0 |= 512;
        publisherGroupId_ = value;
      }
    }
    /// <summary>Gets whether the "publisher_group_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPublisherGroupId {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "publisher_group_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPublisherGroupId() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "sysid" field.</summary>
    public const int SysidFieldNumber = 20;
    private readonly static uint SysidDefaultValue = 0;

    private uint sysid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Sysid {
      get { if ((_hasBits0 & 1024) != 0) { return sysid_; } else { return SysidDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        sysid_ = value;
      }
    }
    /// <summary>Gets whether the "sysid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSysid {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "sysid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSysid() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "trace_tag" field.</summary>
    public const int TraceTagFieldNumber = 21;
    private readonly static ulong TraceTagDefaultValue = 0UL;

    private ulong traceTag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong TraceTag {
      get { if ((_hasBits0 & 2048) != 0) { return traceTag_; } else { return TraceTagDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        traceTag_ = value;
      }
    }
    /// <summary>Gets whether the "trace_tag" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTraceTag {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "trace_tag" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTraceTag() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "webapi_key_id" field.</summary>
    public const int WebapiKeyIdFieldNumber = 25;
    private readonly static uint WebapiKeyIdDefaultValue = 0;

    private uint webapiKeyId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint WebapiKeyId {
      get { if ((_hasBits0 & 32768) != 0) { return webapiKeyId_; } else { return WebapiKeyIdDefaultValue; } }
      set {
        _hasBits0 |= 32768;
        webapiKeyId_ = value;
      }
    }
    /// <summary>Gets whether the "webapi_key_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWebapiKeyId {
      get { return (_hasBits0 & 32768) != 0; }
    }
    /// <summary>Clears the value of the "webapi_key_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWebapiKeyId() {
      _hasBits0 &= ~32768;
    }

    /// <summary>Field number for the "is_from_external_source" field.</summary>
    public const int IsFromExternalSourceFieldNumber = 26;
    private readonly static bool IsFromExternalSourceDefaultValue = false;

    private bool isFromExternalSource_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsFromExternalSource {
      get { if ((_hasBits0 & 65536) != 0) { return isFromExternalSource_; } else { return IsFromExternalSourceDefaultValue; } }
      set {
        _hasBits0 |= 65536;
        isFromExternalSource_ = value;
      }
    }
    /// <summary>Gets whether the "is_from_external_source" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsFromExternalSource {
      get { return (_hasBits0 & 65536) != 0; }
    }
    /// <summary>Clears the value of the "is_from_external_source" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsFromExternalSource() {
      _hasBits0 &= ~65536;
    }

    /// <summary>Field number for the "forward_to_sysid" field.</summary>
    public const int ForwardToSysidFieldNumber = 27;
    private static readonly pb::FieldCodec<uint> _repeated_forwardToSysid_codec
        = pb::FieldCodec.ForUInt32(216);
    private readonly pbc::RepeatedField<uint> forwardToSysid_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> ForwardToSysid {
      get { return forwardToSysid_; }
    }

    /// <summary>Field number for the "cm_sysid" field.</summary>
    public const int CmSysidFieldNumber = 28;
    private readonly static uint CmSysidDefaultValue = 0;

    private uint cmSysid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CmSysid {
      get { if ((_hasBits0 & 131072) != 0) { return cmSysid_; } else { return CmSysidDefaultValue; } }
      set {
        _hasBits0 |= 131072;
        cmSysid_ = value;
      }
    }
    /// <summary>Gets whether the "cm_sysid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCmSysid {
      get { return (_hasBits0 & 131072) != 0; }
    }
    /// <summary>Clears the value of the "cm_sysid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCmSysid() {
      _hasBits0 &= ~131072;
    }

    /// <summary>Field number for the "launcher_type" field.</summary>
    public const int LauncherTypeFieldNumber = 31;
    private readonly static uint LauncherTypeDefaultValue = 0;

    private uint launcherType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint LauncherType {
      get { if ((_hasBits0 & 262144) != 0) { return launcherType_; } else { return LauncherTypeDefaultValue; } }
      set {
        _hasBits0 |= 262144;
        launcherType_ = value;
      }
    }
    /// <summary>Gets whether the "launcher_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLauncherType {
      get { return (_hasBits0 & 262144) != 0; }
    }
    /// <summary>Clears the value of the "launcher_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLauncherType() {
      _hasBits0 &= ~262144;
    }

    /// <summary>Field number for the "realm" field.</summary>
    public const int RealmFieldNumber = 32;
    private readonly static uint RealmDefaultValue = 0;

    private uint realm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Realm {
      get { if ((_hasBits0 & 524288) != 0) { return realm_; } else { return RealmDefaultValue; } }
      set {
        _hasBits0 |= 524288;
        realm_ = value;
      }
    }
    /// <summary>Gets whether the "realm" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRealm {
      get { return (_hasBits0 & 524288) != 0; }
    }
    /// <summary>Clears the value of the "realm" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRealm() {
      _hasBits0 &= ~524288;
    }

    /// <summary>Field number for the "timeout_ms" field.</summary>
    public const int TimeoutMsFieldNumber = 33;
    private readonly static int TimeoutMsDefaultValue = -1;

    private int timeoutMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TimeoutMs {
      get { if ((_hasBits0 & 1048576) != 0) { return timeoutMs_; } else { return TimeoutMsDefaultValue; } }
      set {
        _hasBits0 |= 1048576;
        timeoutMs_ = value;
      }
    }
    /// <summary>Gets whether the "timeout_ms" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTimeoutMs {
      get { return (_hasBits0 & 1048576) != 0; }
    }
    /// <summary>Clears the value of the "timeout_ms" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTimeoutMs() {
      _hasBits0 &= ~1048576;
    }

    /// <summary>Field number for the "debug_source" field.</summary>
    public const int DebugSourceFieldNumber = 34;
    private readonly static string DebugSourceDefaultValue = "";

    private string debugSource_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DebugSource {
      get { return debugSource_ ?? DebugSourceDefaultValue; }
      set {
        debugSource_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "debug_source" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDebugSource {
      get { return debugSource_ != null; }
    }
    /// <summary>Clears the value of the "debug_source" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDebugSource() {
      debugSource_ = null;
    }

    /// <summary>Field number for the "debug_source_string_index" field.</summary>
    public const int DebugSourceStringIndexFieldNumber = 35;
    private readonly static uint DebugSourceStringIndexDefaultValue = 0;

    private uint debugSourceStringIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DebugSourceStringIndex {
      get { if ((_hasBits0 & 2097152) != 0) { return debugSourceStringIndex_; } else { return DebugSourceStringIndexDefaultValue; } }
      set {
        _hasBits0 |= 2097152;
        debugSourceStringIndex_ = value;
      }
    }
    /// <summary>Gets whether the "debug_source_string_index" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDebugSourceStringIndex {
      get { return (_hasBits0 & 2097152) != 0; }
    }
    /// <summary>Clears the value of the "debug_source_string_index" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDebugSourceStringIndex() {
      _hasBits0 &= ~2097152;
    }

    /// <summary>Field number for the "token_id" field.</summary>
    public const int TokenIdFieldNumber = 36;
    private readonly static ulong TokenIdDefaultValue = 0UL;

    private ulong tokenId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong TokenId {
      get { if ((_hasBits0 & 4194304) != 0) { return tokenId_; } else { return TokenIdDefaultValue; } }
      set {
        _hasBits0 |= 4194304;
        tokenId_ = value;
      }
    }
    /// <summary>Gets whether the "token_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTokenId {
      get { return (_hasBits0 & 4194304) != 0; }
    }
    /// <summary>Clears the value of the "token_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTokenId() {
      _hasBits0 &= ~4194304;
    }

    /// <summary>Field number for the "routing_gc" field.</summary>
    public const int RoutingGcFieldNumber = 37;
    private global::Steam.GC.CMsgGCRoutingProtoBufHeader routingGc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Steam.GC.CMsgGCRoutingProtoBufHeader RoutingGc {
      get { return routingGc_; }
      set {
        routingGc_ = value;
      }
    }

    /// <summary>Field number for the "gc_msg_src" field.</summary>
    public const int GcMsgSrcFieldNumber = 200;
    private readonly static global::Steam.GC.GCProtoBufMsgSrc GcMsgSrcDefaultValue = global::Steam.GC.GCProtoBufMsgSrc.Unspecified;

    private global::Steam.GC.GCProtoBufMsgSrc gcMsgSrc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Steam.GC.GCProtoBufMsgSrc GcMsgSrc {
      get { if ((_hasBits0 & 8388608) != 0) { return gcMsgSrc_; } else { return GcMsgSrcDefaultValue; } }
      set {
        _hasBits0 |= 8388608;
        gcMsgSrc_ = value;
      }
    }
    /// <summary>Gets whether the "gc_msg_src" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGcMsgSrc {
      get { return (_hasBits0 & 8388608) != 0; }
    }
    /// <summary>Clears the value of the "gc_msg_src" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGcMsgSrc() {
      _hasBits0 &= ~8388608;
    }

    /// <summary>Field number for the "gc_dir_index_source" field.</summary>
    public const int GcDirIndexSourceFieldNumber = 201;
    private readonly static uint GcDirIndexSourceDefaultValue = 0;

    private uint gcDirIndexSource_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint GcDirIndexSource {
      get { if ((_hasBits0 & 16777216) != 0) { return gcDirIndexSource_; } else { return GcDirIndexSourceDefaultValue; } }
      set {
        _hasBits0 |= 16777216;
        gcDirIndexSource_ = value;
      }
    }
    /// <summary>Gets whether the "gc_dir_index_source" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGcDirIndexSource {
      get { return (_hasBits0 & 16777216) != 0; }
    }
    /// <summary>Clears the value of the "gc_dir_index_source" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGcDirIndexSource() {
      _hasBits0 &= ~16777216;
    }

    /// <summary>Field number for the "ip" field.</summary>
    public const int IpFieldNumber = 15;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Ip {
      get { return HasIp ? (uint) ipAddr_ : 0; }
      set {
        ipAddr_ = value;
        ipAddrCase_ = IpAddrOneofCase.Ip;
      }
    }
    /// <summary>Gets whether the "ip" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIp {
      get { return ipAddrCase_ == IpAddrOneofCase.Ip; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "ip" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIp() {
      if (HasIp) {
        ClearIpAddr();
      }
    }

    /// <summary>Field number for the "ip_v6" field.</summary>
    public const int IpV6FieldNumber = 29;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString IpV6 {
      get { return HasIpV6 ? (pb::ByteString) ipAddr_ : pb::ByteString.Empty; }
      set {
        ipAddr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        ipAddrCase_ = IpAddrOneofCase.IpV6;
      }
    }
    /// <summary>Gets whether the "ip_v6" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIpV6 {
      get { return ipAddrCase_ == IpAddrOneofCase.IpV6; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "ip_v6" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIpV6() {
      if (HasIpV6) {
        ClearIpAddr();
      }
    }

    private object ipAddr_;
    /// <summary>Enum of possible cases for the "ip_addr" oneof.</summary>
    public enum IpAddrOneofCase {
      None = 0,
      Ip = 15,
      IpV6 = 29,
    }
    private IpAddrOneofCase ipAddrCase_ = IpAddrOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public IpAddrOneofCase IpAddrCase {
      get { return ipAddrCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIpAddr() {
      ipAddrCase_ = IpAddrOneofCase.None;
      ipAddr_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgProtoBufHeader);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgProtoBufHeader other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientSteamId != other.ClientSteamId) return false;
      if (ClientSessionId != other.ClientSessionId) return false;
      if (SourceAppId != other.SourceAppId) return false;
      if (JobIdSource != other.JobIdSource) return false;
      if (JobIdTarget != other.JobIdTarget) return false;
      if (TargetJobName != other.TargetJobName) return false;
      if (SeqNum != other.SeqNum) return false;
      if (Eresult != other.Eresult) return false;
      if (ErrorMessage != other.ErrorMessage) return false;
      if (AuthAccountFlags != other.AuthAccountFlags) return false;
      if (TokenSource != other.TokenSource) return false;
      if (AdminSpoofingUser != other.AdminSpoofingUser) return false;
      if (TransportError != other.TransportError) return false;
      if (Messageid != other.Messageid) return false;
      if (PublisherGroupId != other.PublisherGroupId) return false;
      if (Sysid != other.Sysid) return false;
      if (TraceTag != other.TraceTag) return false;
      if (WebapiKeyId != other.WebapiKeyId) return false;
      if (IsFromExternalSource != other.IsFromExternalSource) return false;
      if(!forwardToSysid_.Equals(other.forwardToSysid_)) return false;
      if (CmSysid != other.CmSysid) return false;
      if (LauncherType != other.LauncherType) return false;
      if (Realm != other.Realm) return false;
      if (TimeoutMs != other.TimeoutMs) return false;
      if (DebugSource != other.DebugSource) return false;
      if (DebugSourceStringIndex != other.DebugSourceStringIndex) return false;
      if (TokenId != other.TokenId) return false;
      if (!object.Equals(RoutingGc, other.RoutingGc)) return false;
      if (GcMsgSrc != other.GcMsgSrc) return false;
      if (GcDirIndexSource != other.GcDirIndexSource) return false;
      if (Ip != other.Ip) return false;
      if (IpV6 != other.IpV6) return false;
      if (IpAddrCase != other.IpAddrCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClientSteamId) hash ^= ClientSteamId.GetHashCode();
      if (HasClientSessionId) hash ^= ClientSessionId.GetHashCode();
      if (HasSourceAppId) hash ^= SourceAppId.GetHashCode();
      if (HasJobIdSource) hash ^= JobIdSource.GetHashCode();
      if (HasJobIdTarget) hash ^= JobIdTarget.GetHashCode();
      if (HasTargetJobName) hash ^= TargetJobName.GetHashCode();
      if (HasSeqNum) hash ^= SeqNum.GetHashCode();
      if (HasEresult) hash ^= Eresult.GetHashCode();
      if (HasErrorMessage) hash ^= ErrorMessage.GetHashCode();
      if (HasAuthAccountFlags) hash ^= AuthAccountFlags.GetHashCode();
      if (HasTokenSource) hash ^= TokenSource.GetHashCode();
      if (HasAdminSpoofingUser) hash ^= AdminSpoofingUser.GetHashCode();
      if (HasTransportError) hash ^= TransportError.GetHashCode();
      if (HasMessageid) hash ^= Messageid.GetHashCode();
      if (HasPublisherGroupId) hash ^= PublisherGroupId.GetHashCode();
      if (HasSysid) hash ^= Sysid.GetHashCode();
      if (HasTraceTag) hash ^= TraceTag.GetHashCode();
      if (HasWebapiKeyId) hash ^= WebapiKeyId.GetHashCode();
      if (HasIsFromExternalSource) hash ^= IsFromExternalSource.GetHashCode();
      hash ^= forwardToSysid_.GetHashCode();
      if (HasCmSysid) hash ^= CmSysid.GetHashCode();
      if (HasLauncherType) hash ^= LauncherType.GetHashCode();
      if (HasRealm) hash ^= Realm.GetHashCode();
      if (HasTimeoutMs) hash ^= TimeoutMs.GetHashCode();
      if (HasDebugSource) hash ^= DebugSource.GetHashCode();
      if (HasDebugSourceStringIndex) hash ^= DebugSourceStringIndex.GetHashCode();
      if (HasTokenId) hash ^= TokenId.GetHashCode();
      if (routingGc_ != null) hash ^= RoutingGc.GetHashCode();
      if (HasGcMsgSrc) hash ^= GcMsgSrc.GetHashCode();
      if (HasGcDirIndexSource) hash ^= GcDirIndexSource.GetHashCode();
      if (HasIp) hash ^= Ip.GetHashCode();
      if (HasIpV6) hash ^= IpV6.GetHashCode();
      hash ^= (int) ipAddrCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasClientSteamId) {
        output.WriteRawTag(9);
        output.WriteFixed64(ClientSteamId);
      }
      if (HasClientSessionId) {
        output.WriteRawTag(16);
        output.WriteInt32(ClientSessionId);
      }
      if (HasSourceAppId) {
        output.WriteRawTag(24);
        output.WriteUInt32(SourceAppId);
      }
      if (HasJobIdSource) {
        output.WriteRawTag(81);
        output.WriteFixed64(JobIdSource);
      }
      if (HasJobIdTarget) {
        output.WriteRawTag(89);
        output.WriteFixed64(JobIdTarget);
      }
      if (HasTargetJobName) {
        output.WriteRawTag(98);
        output.WriteString(TargetJobName);
      }
      if (HasEresult) {
        output.WriteRawTag(104);
        output.WriteInt32(Eresult);
      }
      if (HasErrorMessage) {
        output.WriteRawTag(114);
        output.WriteString(ErrorMessage);
      }
      if (HasIp) {
        output.WriteRawTag(120);
        output.WriteUInt32(Ip);
      }
      if (HasAuthAccountFlags) {
        output.WriteRawTag(128, 1);
        output.WriteUInt32(AuthAccountFlags);
      }
      if (HasTransportError) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(TransportError);
      }
      if (HasMessageid) {
        output.WriteRawTag(144, 1);
        output.WriteUInt64(Messageid);
      }
      if (HasPublisherGroupId) {
        output.WriteRawTag(152, 1);
        output.WriteUInt32(PublisherGroupId);
      }
      if (HasSysid) {
        output.WriteRawTag(160, 1);
        output.WriteUInt32(Sysid);
      }
      if (HasTraceTag) {
        output.WriteRawTag(168, 1);
        output.WriteUInt64(TraceTag);
      }
      if (HasTokenSource) {
        output.WriteRawTag(176, 1);
        output.WriteUInt32(TokenSource);
      }
      if (HasAdminSpoofingUser) {
        output.WriteRawTag(184, 1);
        output.WriteBool(AdminSpoofingUser);
      }
      if (HasSeqNum) {
        output.WriteRawTag(192, 1);
        output.WriteInt32(SeqNum);
      }
      if (HasWebapiKeyId) {
        output.WriteRawTag(200, 1);
        output.WriteUInt32(WebapiKeyId);
      }
      if (HasIsFromExternalSource) {
        output.WriteRawTag(208, 1);
        output.WriteBool(IsFromExternalSource);
      }
      forwardToSysid_.WriteTo(output, _repeated_forwardToSysid_codec);
      if (HasCmSysid) {
        output.WriteRawTag(224, 1);
        output.WriteUInt32(CmSysid);
      }
      if (HasIpV6) {
        output.WriteRawTag(234, 1);
        output.WriteBytes(IpV6);
      }
      if (HasLauncherType) {
        output.WriteRawTag(248, 1);
        output.WriteUInt32(LauncherType);
      }
      if (HasRealm) {
        output.WriteRawTag(128, 2);
        output.WriteUInt32(Realm);
      }
      if (HasTimeoutMs) {
        output.WriteRawTag(136, 2);
        output.WriteInt32(TimeoutMs);
      }
      if (HasDebugSource) {
        output.WriteRawTag(146, 2);
        output.WriteString(DebugSource);
      }
      if (HasDebugSourceStringIndex) {
        output.WriteRawTag(152, 2);
        output.WriteUInt32(DebugSourceStringIndex);
      }
      if (HasTokenId) {
        output.WriteRawTag(160, 2);
        output.WriteUInt64(TokenId);
      }
      if (routingGc_ != null) {
        output.WriteRawTag(170, 2);
        output.WriteMessage(RoutingGc);
      }
      if (HasGcMsgSrc) {
        output.WriteRawTag(192, 12);
        output.WriteEnum((int) GcMsgSrc);
      }
      if (HasGcDirIndexSource) {
        output.WriteRawTag(200, 12);
        output.WriteUInt32(GcDirIndexSource);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasClientSteamId) {
        output.WriteRawTag(9);
        output.WriteFixed64(ClientSteamId);
      }
      if (HasClientSessionId) {
        output.WriteRawTag(16);
        output.WriteInt32(ClientSessionId);
      }
      if (HasSourceAppId) {
        output.WriteRawTag(24);
        output.WriteUInt32(SourceAppId);
      }
      if (HasJobIdSource) {
        output.WriteRawTag(81);
        output.WriteFixed64(JobIdSource);
      }
      if (HasJobIdTarget) {
        output.WriteRawTag(89);
        output.WriteFixed64(JobIdTarget);
      }
      if (HasTargetJobName) {
        output.WriteRawTag(98);
        output.WriteString(TargetJobName);
      }
      if (HasEresult) {
        output.WriteRawTag(104);
        output.WriteInt32(Eresult);
      }
      if (HasErrorMessage) {
        output.WriteRawTag(114);
        output.WriteString(ErrorMessage);
      }
      if (HasIp) {
        output.WriteRawTag(120);
        output.WriteUInt32(Ip);
      }
      if (HasAuthAccountFlags) {
        output.WriteRawTag(128, 1);
        output.WriteUInt32(AuthAccountFlags);
      }
      if (HasTransportError) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(TransportError);
      }
      if (HasMessageid) {
        output.WriteRawTag(144, 1);
        output.WriteUInt64(Messageid);
      }
      if (HasPublisherGroupId) {
        output.WriteRawTag(152, 1);
        output.WriteUInt32(PublisherGroupId);
      }
      if (HasSysid) {
        output.WriteRawTag(160, 1);
        output.WriteUInt32(Sysid);
      }
      if (HasTraceTag) {
        output.WriteRawTag(168, 1);
        output.WriteUInt64(TraceTag);
      }
      if (HasTokenSource) {
        output.WriteRawTag(176, 1);
        output.WriteUInt32(TokenSource);
      }
      if (HasAdminSpoofingUser) {
        output.WriteRawTag(184, 1);
        output.WriteBool(AdminSpoofingUser);
      }
      if (HasSeqNum) {
        output.WriteRawTag(192, 1);
        output.WriteInt32(SeqNum);
      }
      if (HasWebapiKeyId) {
        output.WriteRawTag(200, 1);
        output.WriteUInt32(WebapiKeyId);
      }
      if (HasIsFromExternalSource) {
        output.WriteRawTag(208, 1);
        output.WriteBool(IsFromExternalSource);
      }
      forwardToSysid_.WriteTo(ref output, _repeated_forwardToSysid_codec);
      if (HasCmSysid) {
        output.WriteRawTag(224, 1);
        output.WriteUInt32(CmSysid);
      }
      if (HasIpV6) {
        output.WriteRawTag(234, 1);
        output.WriteBytes(IpV6);
      }
      if (HasLauncherType) {
        output.WriteRawTag(248, 1);
        output.WriteUInt32(LauncherType);
      }
      if (HasRealm) {
        output.WriteRawTag(128, 2);
        output.WriteUInt32(Realm);
      }
      if (HasTimeoutMs) {
        output.WriteRawTag(136, 2);
        output.WriteInt32(TimeoutMs);
      }
      if (HasDebugSource) {
        output.WriteRawTag(146, 2);
        output.WriteString(DebugSource);
      }
      if (HasDebugSourceStringIndex) {
        output.WriteRawTag(152, 2);
        output.WriteUInt32(DebugSourceStringIndex);
      }
      if (HasTokenId) {
        output.WriteRawTag(160, 2);
        output.WriteUInt64(TokenId);
      }
      if (routingGc_ != null) {
        output.WriteRawTag(170, 2);
        output.WriteMessage(RoutingGc);
      }
      if (HasGcMsgSrc) {
        output.WriteRawTag(192, 12);
        output.WriteEnum((int) GcMsgSrc);
      }
      if (HasGcDirIndexSource) {
        output.WriteRawTag(200, 12);
        output.WriteUInt32(GcDirIndexSource);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasClientSteamId) {
        size += 1 + 8;
      }
      if (HasClientSessionId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ClientSessionId);
      }
      if (HasSourceAppId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SourceAppId);
      }
      if (HasJobIdSource) {
        size += 1 + 8;
      }
      if (HasJobIdTarget) {
        size += 1 + 8;
      }
      if (HasTargetJobName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TargetJobName);
      }
      if (HasSeqNum) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(SeqNum);
      }
      if (HasEresult) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Eresult);
      }
      if (HasErrorMessage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorMessage);
      }
      if (HasAuthAccountFlags) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(AuthAccountFlags);
      }
      if (HasTokenSource) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TokenSource);
      }
      if (HasAdminSpoofingUser) {
        size += 2 + 1;
      }
      if (HasTransportError) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(TransportError);
      }
      if (HasMessageid) {
        size += 2 + pb::CodedOutputStream.ComputeUInt64Size(Messageid);
      }
      if (HasPublisherGroupId) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(PublisherGroupId);
      }
      if (HasSysid) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Sysid);
      }
      if (HasTraceTag) {
        size += 2 + pb::CodedOutputStream.ComputeUInt64Size(TraceTag);
      }
      if (HasWebapiKeyId) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(WebapiKeyId);
      }
      if (HasIsFromExternalSource) {
        size += 2 + 1;
      }
      size += forwardToSysid_.CalculateSize(_repeated_forwardToSysid_codec);
      if (HasCmSysid) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(CmSysid);
      }
      if (HasLauncherType) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(LauncherType);
      }
      if (HasRealm) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Realm);
      }
      if (HasTimeoutMs) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(TimeoutMs);
      }
      if (HasDebugSource) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(DebugSource);
      }
      if (HasDebugSourceStringIndex) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(DebugSourceStringIndex);
      }
      if (HasTokenId) {
        size += 2 + pb::CodedOutputStream.ComputeUInt64Size(TokenId);
      }
      if (routingGc_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RoutingGc);
      }
      if (HasGcMsgSrc) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) GcMsgSrc);
      }
      if (HasGcDirIndexSource) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(GcDirIndexSource);
      }
      if (HasIp) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ip);
      }
      if (HasIpV6) {
        size += 2 + pb::CodedOutputStream.ComputeBytesSize(IpV6);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgProtoBufHeader other) {
      if (other == null) {
        return;
      }
      if (other.HasClientSteamId) {
        ClientSteamId = other.ClientSteamId;
      }
      if (other.HasClientSessionId) {
        ClientSessionId = other.ClientSessionId;
      }
      if (other.HasSourceAppId) {
        SourceAppId = other.SourceAppId;
      }
      if (other.HasJobIdSource) {
        JobIdSource = other.JobIdSource;
      }
      if (other.HasJobIdTarget) {
        JobIdTarget = other.JobIdTarget;
      }
      if (other.HasTargetJobName) {
        TargetJobName = other.TargetJobName;
      }
      if (other.HasSeqNum) {
        SeqNum = other.SeqNum;
      }
      if (other.HasEresult) {
        Eresult = other.Eresult;
      }
      if (other.HasErrorMessage) {
        ErrorMessage = other.ErrorMessage;
      }
      if (other.HasAuthAccountFlags) {
        AuthAccountFlags = other.AuthAccountFlags;
      }
      if (other.HasTokenSource) {
        TokenSource = other.TokenSource;
      }
      if (other.HasAdminSpoofingUser) {
        AdminSpoofingUser = other.AdminSpoofingUser;
      }
      if (other.HasTransportError) {
        TransportError = other.TransportError;
      }
      if (other.HasMessageid) {
        Messageid = other.Messageid;
      }
      if (other.HasPublisherGroupId) {
        PublisherGroupId = other.PublisherGroupId;
      }
      if (other.HasSysid) {
        Sysid = other.Sysid;
      }
      if (other.HasTraceTag) {
        TraceTag = other.TraceTag;
      }
      if (other.HasWebapiKeyId) {
        WebapiKeyId = other.WebapiKeyId;
      }
      if (other.HasIsFromExternalSource) {
        IsFromExternalSource = other.IsFromExternalSource;
      }
      forwardToSysid_.Add(other.forwardToSysid_);
      if (other.HasCmSysid) {
        CmSysid = other.CmSysid;
      }
      if (other.HasLauncherType) {
        LauncherType = other.LauncherType;
      }
      if (other.HasRealm) {
        Realm = other.Realm;
      }
      if (other.HasTimeoutMs) {
        TimeoutMs = other.TimeoutMs;
      }
      if (other.HasDebugSource) {
        DebugSource = other.DebugSource;
      }
      if (other.HasDebugSourceStringIndex) {
        DebugSourceStringIndex = other.DebugSourceStringIndex;
      }
      if (other.HasTokenId) {
        TokenId = other.TokenId;
      }
      if (other.routingGc_ != null) {
        if (routingGc_ == null) {
          RoutingGc = new global::Steam.GC.CMsgGCRoutingProtoBufHeader();
        }
        RoutingGc.MergeFrom(other.RoutingGc);
      }
      if (other.HasGcMsgSrc) {
        GcMsgSrc = other.GcMsgSrc;
      }
      if (other.HasGcDirIndexSource) {
        GcDirIndexSource = other.GcDirIndexSource;
      }
      switch (other.IpAddrCase) {
        case IpAddrOneofCase.Ip:
          Ip = other.Ip;
          break;
        case IpAddrOneofCase.IpV6:
          IpV6 = other.IpV6;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            ClientSteamId = input.ReadFixed64();
            break;
          }
          case 16: {
            ClientSessionId = input.ReadInt32();
            break;
          }
          case 24: {
            SourceAppId = input.ReadUInt32();
            break;
          }
          case 81: {
            JobIdSource = input.ReadFixed64();
            break;
          }
          case 89: {
            JobIdTarget = input.ReadFixed64();
            break;
          }
          case 98: {
            TargetJobName = input.ReadString();
            break;
          }
          case 104: {
            Eresult = input.ReadInt32();
            break;
          }
          case 114: {
            ErrorMessage = input.ReadString();
            break;
          }
          case 120: {
            Ip = input.ReadUInt32();
            break;
          }
          case 128: {
            AuthAccountFlags = input.ReadUInt32();
            break;
          }
          case 136: {
            TransportError = input.ReadInt32();
            break;
          }
          case 144: {
            Messageid = input.ReadUInt64();
            break;
          }
          case 152: {
            PublisherGroupId = input.ReadUInt32();
            break;
          }
          case 160: {
            Sysid = input.ReadUInt32();
            break;
          }
          case 168: {
            TraceTag = input.ReadUInt64();
            break;
          }
          case 176: {
            TokenSource = input.ReadUInt32();
            break;
          }
          case 184: {
            AdminSpoofingUser = input.ReadBool();
            break;
          }
          case 192: {
            SeqNum = input.ReadInt32();
            break;
          }
          case 200: {
            WebapiKeyId = input.ReadUInt32();
            break;
          }
          case 208: {
            IsFromExternalSource = input.ReadBool();
            break;
          }
          case 218:
          case 216: {
            forwardToSysid_.AddEntriesFrom(input, _repeated_forwardToSysid_codec);
            break;
          }
          case 224: {
            CmSysid = input.ReadUInt32();
            break;
          }
          case 234: {
            IpV6 = input.ReadBytes();
            break;
          }
          case 248: {
            LauncherType = input.ReadUInt32();
            break;
          }
          case 256: {
            Realm = input.ReadUInt32();
            break;
          }
          case 264: {
            TimeoutMs = input.ReadInt32();
            break;
          }
          case 274: {
            DebugSource = input.ReadString();
            break;
          }
          case 280: {
            DebugSourceStringIndex = input.ReadUInt32();
            break;
          }
          case 288: {
            TokenId = input.ReadUInt64();
            break;
          }
          case 298: {
            if (routingGc_ == null) {
              RoutingGc = new global::Steam.GC.CMsgGCRoutingProtoBufHeader();
            }
            input.ReadMessage(RoutingGc);
            break;
          }
          case 1600: {
            GcMsgSrc = (global::Steam.GC.GCProtoBufMsgSrc) input.ReadEnum();
            break;
          }
          case 1608: {
            GcDirIndexSource = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            ClientSteamId = input.ReadFixed64();
            break;
          }
          case 16: {
            ClientSessionId = input.ReadInt32();
            break;
          }
          case 24: {
            SourceAppId = input.ReadUInt32();
            break;
          }
          case 81: {
            JobIdSource = input.ReadFixed64();
            break;
          }
          case 89: {
            JobIdTarget = input.ReadFixed64();
            break;
          }
          case 98: {
            TargetJobName = input.ReadString();
            break;
          }
          case 104: {
            Eresult = input.ReadInt32();
            break;
          }
          case 114: {
            ErrorMessage = input.ReadString();
            break;
          }
          case 120: {
            Ip = input.ReadUInt32();
            break;
          }
          case 128: {
            AuthAccountFlags = input.ReadUInt32();
            break;
          }
          case 136: {
            TransportError = input.ReadInt32();
            break;
          }
          case 144: {
            Messageid = input.ReadUInt64();
            break;
          }
          case 152: {
            PublisherGroupId = input.ReadUInt32();
            break;
          }
          case 160: {
            Sysid = input.ReadUInt32();
            break;
          }
          case 168: {
            TraceTag = input.ReadUInt64();
            break;
          }
          case 176: {
            TokenSource = input.ReadUInt32();
            break;
          }
          case 184: {
            AdminSpoofingUser = input.ReadBool();
            break;
          }
          case 192: {
            SeqNum = input.ReadInt32();
            break;
          }
          case 200: {
            WebapiKeyId = input.ReadUInt32();
            break;
          }
          case 208: {
            IsFromExternalSource = input.ReadBool();
            break;
          }
          case 218:
          case 216: {
            forwardToSysid_.AddEntriesFrom(ref input, _repeated_forwardToSysid_codec);
            break;
          }
          case 224: {
            CmSysid = input.ReadUInt32();
            break;
          }
          case 234: {
            IpV6 = input.ReadBytes();
            break;
          }
          case 248: {
            LauncherType = input.ReadUInt32();
            break;
          }
          case 256: {
            Realm = input.ReadUInt32();
            break;
          }
          case 264: {
            TimeoutMs = input.ReadInt32();
            break;
          }
          case 274: {
            DebugSource = input.ReadString();
            break;
          }
          case 280: {
            DebugSourceStringIndex = input.ReadUInt32();
            break;
          }
          case 288: {
            TokenId = input.ReadUInt64();
            break;
          }
          case 298: {
            if (routingGc_ == null) {
              RoutingGc = new global::Steam.GC.CMsgGCRoutingProtoBufHeader();
            }
            input.ReadMessage(RoutingGc);
            break;
          }
          case 1600: {
            GcMsgSrc = (global::Steam.GC.GCProtoBufMsgSrc) input.ReadEnum();
            break;
          }
          case 1608: {
            GcDirIndexSource = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
